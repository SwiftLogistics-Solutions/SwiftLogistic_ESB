<?xml version="1.0" encoding="UTF-8"?>
<api context="/product" name="Product" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="GET" uri-template="/">
        <inSequence>
            <log category="INFO">
                <message>Fetching all products</message>
            </log>
            <http.get configKey="ProductServiceConnection">
                <relativePath>/api/products</relativePath>
                <headers>[["Content-Type","application/json"]]</headers>
                <forceScAccepted>false</forceScAccepted>
                <disableChunking>false</disableChunking>
                <forceHttp10>false</forceHttp10>
                <noKeepAlive>false</noKeepAlive>
                <forcePostPutNobody>false</forcePostPutNobody>
                <forceHttpContentLength>false</forceHttpContentLength>
            </http.get>
            <log category="INFO">
                <message>Products response: ${payload}</message>
            </log>
            <respond/>
        </inSequence>
        <faultSequence>
            <log category="ERROR">
                <message>Error fetching products: ${props.synapse.ERROR_MESSAGE}</message>
            </log>
            <payloadFactory media-type="json">
                <format>
                    {
                    "status": "error",
                    "message": "Failed to fetch products"
                    }
                </format>
            </payloadFactory>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" uri-template="/{id}">
        <inSequence>
            <log category="INFO">
                <message>Fetching product with ID: ${params.pathParams.id}</message>
            </log>
            <http.get configKey="ProductServiceConnection">
                <relativePath>/api/products/${params.pathParams.id}</relativePath>
                <headers>[["Content-Type","application/json"]]</headers>
                <forceScAccepted>false</forceScAccepted>
                <disableChunking>false</disableChunking>
                <forceHttp10>false</forceHttp10>
                <noKeepAlive>false</noKeepAlive>
                <forcePostPutNobody>false</forcePostPutNobody>
                <forceHttpContentLength>false</forceHttpContentLength>
            </http.get>
            <log category="INFO">
                <message>Product response: ${payload}</message>
            </log>
            <respond/>
        </inSequence>
        <faultSequence>
            <log category="ERROR">
                <message>Error fetching product: ${props.synapse.ERROR_MESSAGE}</message>
            </log>
            <payloadFactory media-type="json">
                <format>
                    {
                    "status": "error",
                    "message": "Failed to fetch product"
                    }
                </format>
            </payloadFactory>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" uri-template="/offers">
        <inSequence>
            <log category="INFO">
                <message>Fetching product offers</message>
            </log>
            <http.get configKey="ProductServiceConnection">
                <relativePath>/api/products/offers</relativePath>
                <headers>[["Content-Type","application/json"]]</headers>
                <forceScAccepted>false</forceScAccepted>
                <disableChunking>false</disableChunking>
                <forceHttp10>false</forceHttp10>
                <noKeepAlive>false</noKeepAlive>
                <forcePostPutNobody>false</forcePostPutNobody>
                <forceHttpContentLength>false</forceHttpContentLength>
            </http.get>
            <log category="INFO">
                <message>Offers response: ${payload}</message>
            </log>
            <respond/>
        </inSequence>
        <faultSequence>
            <log category="ERROR">
                <message>Error fetching offers: ${props.synapse.ERROR_MESSAGE}</message>
            </log>
            <payloadFactory media-type="json">
                <format>
                    {
                    "status": "error",
                    "message": "Failed to fetch offers"
                    }
                </format>
            </payloadFactory>
            <respond/>
        </faultSequence>
    </resource>
</api>
