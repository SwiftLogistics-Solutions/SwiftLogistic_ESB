<?xml version="1.0" encoding="UTF-8"?>
<api context="/neworder" name="newOrder" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST" uri-template="/">
        <inSequence>
            <log category="INFO">
                <message>Received payload: ${payload}</message>
            </log>
            <!-- Extract the nested payload data -->
            <variable name="orderData" expression="${payload.payload}" type="JSON"/>
            <!-- Validate payload structure using the extracted data -->
            <filter xpath="${exists(vars.orderData.orderId) and exists(vars.orderData.customerId)}">
                <then>
                    <scatter-gather parallel-execution="false" target="Body" result-content-type="JSON">
                        <aggregation expression="${payload}"/>
                        <!-- First Path: Send immediate response -->
                        <sequence>
                            <payloadFactory media-type="json">
                                <format>
                                    {
                                    "status": "ack",
                                    "message": "Order received and being processed",
                                    "orderId": "${vars.orderData.orderId}"
                                    }
                                </format>
                            </payloadFactory>
                            <respond/>
                        </sequence>
                        <!-- Second Path: Transform and send to external service -->
                        <sequence>
                            <log category="INFO">
                                <message>Processing order: ${vars.orderData.orderId}</message>
                            </log>
                            <!-- Create SOAP request matching the server's expected format -->
                            <payloadFactory media-type="xml">
                                <format>
                                    <![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="urn:swiftlogistics.wms">
                                        <soap:Body>
                                            <tns:new_package>
                                                <orderId>${vars.orderData.orderId}</orderId>
                                                <customerId>${vars.orderData.customerId}</customerId>
                                                <amount>${vars.orderData.amount}</amount>
                                                <items>${vars.orderData.items}</items>
                                            </tns:new_package>
                                        </soap:Body>
                                    </soap:Envelope>]]>
                                </format>
                            </payloadFactory>
                            <!-- Log the complete request details before sending -->
                            <log category="INFO">
                                <message>About to send request to external SOAP service</message>
                            </log>
                            <log category="INFO">
                                <message>Request Body: ${xpath('$body/node()')}</message>
                            </log>
                            <!-- Send to external service -->
                            <http.post configKey="ExternalSOAPService">
                                <relativePath>/orderService</relativePath>
                                <headers>[["Content-Type","text/xml"],["SOAPAction","processOrder"]]</headers>
                                <requestBodyType>XML</requestBodyType>
                                <requestBodyXml>${xpath('$body/node()')}</requestBodyXml>
                            </http.post>
                            <log category="INFO">
                                <message>External service response received: ${payload}</message>
                            </log>
                            <!-- Extract the orderId from SOAP response -->
                            <variable name="receivedOrderId" expression="${payload.Envelope.Body.new_package_response}" type="STRING"/>
                            <log category="INFO">
                                <message>Extracted orderId: ${vars.receivedOrderId}</message>
                            </log>
                            <!-- Make REST call to second service -->
                            <payloadFactory media-type="json">
                                <format>
                                    {
                                    "orderId": "${vars.receivedOrderId}",
                                    "customerId": "${vars.orderData.customerId}",
                                    "totalAmount": "${vars.orderData.amount}",
                                    "items": ${vars.orderData.items}
                                    }
                                </format>
                            </payloadFactory>
                            <log category="INFO">
                                <message>Sending REST request to second service: ${payload}</message>
                            </log>
                            <http.post configKey="WMSconnection">
                                <relativePath>/makeOrder</relativePath>
                                <headers>[["Content-Type","application/json"]]</headers>
                                <requestBodyType>JSON</requestBodyType>
                                <requestBodyJson>${payload}</requestBodyJson>
                                <forceScAccepted>false</forceScAccepted>
                                <disableChunking>false</disableChunking>
                                <forceHttp10>false</forceHttp10>
                                <noKeepAlive>false</noKeepAlive>
                                <forcePostPutNobody>false</forcePostPutNobody>
                                <responseVariable>http_post_819</responseVariable>
                                <overwriteBody>true</overwriteBody>
                            </http.post>
                            <log category="INFO">
                                <message>Second service response: ${payload}</message>
                            </log>
                        </sequence>
                    </scatter-gather>
                </then>
                <else>
                    <log category="ERROR">
                        <message>Invalid payload structure - missing required fields</message>
                    </log>
                    <payloadFactory media-type="json">
                        <format>
                            {
                            "status": "error",
                            "message": "Invalid payload - orderId and customerId are required"
                            }
                        </format>
                    </payloadFactory>
                    <respond/>
                </else>
            </filter>
        </inSequence>
        <faultSequence>
            <log category="ERROR">
                <message>Error occurred: ${props.synapse.ERROR_MESSAGE}</message>
            </log>
            <payloadFactory media-type="json">
                <format>
                    {
                    "status": "error",
                    "message": "Order processing failed"
                    }
                </format>
            </payloadFactory>
            <respond/>
        </faultSequence>
    </resource>
</api>
