<?xml version="1.0" encoding="UTF-8"?>
<api context="/neworder" name="newOrder" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST" uri-template="/">
        <inSequence>
            <log category="INFO">
                <message>Received payload: ${payload}</message>
            </log>
            <!-- Extract the nested payload data -->
            <variable name="orderData" type="JSON" expression="${payload}"/>
            <!-- Validate payload structure using the extracted data -->
            <filter xpath="${exists(vars.orderData.orderID) and exists(vars.orderData.customer_id)}">
                <then>
                    <scatter-gather parallel-execution="false" target="Body" result-content-type="JSON">
                        <aggregation expression="${payload}"/>
                        <!-- First Path: Send immediate response -->
                        <sequence>
                            <payloadFactory media-type="json">
                                <format>
                                    {
                                    "status": "ack",
                                    "message": "Order received and being processed",
                                    "orderId": "${vars.orderData.orderID}"
                                    }
                                </format>
                            </payloadFactory>
                            <respond/>
                        </sequence>
                        <!-- Second Path: Transform and send to external service -->
                        <sequence>
                            <log category="INFO">
                                <message>Processing order: ${vars.orderData.orderID}</message>
                            </log>
                            <!-- Convert items array to XML format -->
                            <variable name="itemsXml" type="STRING" expression="${vars.orderData.items}"/>
                            <!-- Create proper SOAP request with formatted items -->
                            <payloadFactory media-type="xml">
                                <format>
                                    <![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
                                        <soap:Body>
                                            <create_order>
                                                <orderID>${vars.orderData.orderID}</orderID>
                                                <customer_id>${vars.orderData.customer_id}</customer_id>
                                                <priority>${vars.orderData.priority}</priority>
                                                <totalAmount>${vars.orderData.totalAmount}</totalAmount>
                                                    <item>
                                                        <product_id>${vars.orderData.items[0].product_id}</product_id>
                                                        <name>${vars.orderData.items[0].name}</name>
                                                        <quantity>${vars.orderData.items[0].quantity}</quantity>
                                                        <price>${vars.orderData.items[0].price}</price>
                                                    </item>
                                                    <item>
                                                        <product_id>${vars.orderData.items[1].product_id}</product_id>
                                                        <name>${vars.orderData.items[1].name}</name>
                                                        <quantity>${vars.orderData.items[1].quantity}</quantity>
                                                        <price>${vars.orderData.items[1].price}</price>
                                                    </item>
                                            </create_order>
                                        </soap:Body>
                                    </soap:Envelope>]]>
                                </format>
                            </payloadFactory>
                            <!-- Log the complete request details before sending -->
                            <log category="INFO" logMessageID="false" logFullPayload="false">
                                <message>About to send request to external SOAP serviceOrder Data: ${vars.orderData}</message>
                            </log>
                            <log category="INFO">
                                <message>Request Body: ${xpath('$body/node()')}</message>
                            </log>
                            <!-- Send to external service -->
                            <http.post configKey="ExternalSOAPService">
                                <relativePath>/orderService</relativePath>
                                <headers>[["Content-Type","text/xml"], ["SOAPAction","create_order"]]</headers>
                                <requestBodyType>XML</requestBodyType>
                                <requestBodyXml>${xpath('$body/node()')}</requestBodyXml>
                                <forceScAccepted>false</forceScAccepted>
                                <disableChunking>false</disableChunking>
                                <forceHttp10>false</forceHttp10>
                                <noKeepAlive>false</noKeepAlive>
                                <forcePostPutNobody>false</forcePostPutNobody>
                                <responseVariable>soapResponse</responseVariable>
                                <overwriteBody>true</overwriteBody>
                            </http.post>
                            <log category="INFO">
                                <message>External service response received: ${payload}</message>
                            </log>
                            <!-- Extract the orderId from SOAP response -->
                            <variable name="receivedOrderId" expression="${xpath('//new_package_response/text()')}" type="STRING"/>
                            <log category="INFO">
                                <message>Extracted orderId: ${vars.receivedOrderId}</message>
                            </log>
                            <!-- Make REST call to second service -->
                            <payloadFactory media-type="json">
                                <format>
                                    {
                                    "orderId": "${vars.receivedOrderId}",
                                    "customerId": "${vars.orderData.customer_id}",
                                    "totalAmount": "${vars.orderData.totalAmount}",
                                    "items": ${vars.orderData.items}
                                    }
                                </format>
                            </payloadFactory>
                            <log category="INFO">
                                <message>Sending REST request to second service: ${payload}</message>
                            </log>
                            <http.post configKey="WMSconnection">
                                <relativePath>/makeOrder</relativePath>
                                <headers>[["Content-Type","application/json"]]</headers>
                                <requestBodyType>JSON</requestBodyType>
                                <requestBodyJson>${payload}</requestBodyJson>
                                <forceScAccepted>false</forceScAccepted>
                                <disableChunking>false</disableChunking>
                                <forceHttp10>false</forceHttp10>
                                <noKeepAlive>false</noKeepAlive>
                                <forcePostPutNobody>false</forcePostPutNobody>
                                <responseVariable>wmsResponse</responseVariable>
                                <overwriteBody>true</overwriteBody>
                            </http.post>
                            <log category="INFO">
                                <message>Second service response: ${payload}</message>
                            </log>
                        </sequence>
                    </scatter-gather>
                </then>
                <else>
                    <log category="ERROR">
                        <message>Invalid payload structure - missing required fields</message>
                    </log>
                    <payloadFactory media-type="json">
                        <format>
                            {
                            "status": "error",
                            "message": "Invalid payload - orderId and customerId are required"
                            }
                        </format>
                    </payloadFactory>
                    <respond/>
                </else>
            </filter>
        </inSequence>
        <faultSequence>
            <log category="ERROR">
                <message>Error occurred: ${props.synapse.ERROR_MESSAGE}</message>
            </log>
            <payloadFactory media-type="json">
                <format>
                    {
                    "status": "error",
                    "message": "Order processing failed"
                    }
                </format>
            </payloadFactory>
            <respond/>
        </faultSequence>
    </resource>
</api>
